@model TSB.Entites.Category

@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_LayouAdmin.cshtml";
}

<h2>Update</h2>

@using (Html.BeginForm("Update","Category",FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <lenger>Danh mục bài viết</lenger>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })



    <div class="form-group">
        @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ParentId", "Danh mục cha")
            @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Image, new { @readonly = "readonly" })
            <input type="button" name="btnSelectImg" id="btnSelectImg" value="Chọn ảnh" />
            <div id="ImagePreview">
                <div id="FlashOb"></div>
                <img src="@Model.Image" alt="" style="width:215px;height:115px;" />
            </div>
            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.TypeShow, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.TypeShow, new { @class = "control-label con-md-2" })
            @Html.ValidationMessageFor(model => model.TypeShow, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Metatitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Metatitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Metatitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShowHome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.ShowHome)
                @Html.ValidationMessageFor(model => model.ShowHome, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.Status, new { @checked = "true" }) Có/ Không?
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Lưu lại" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
